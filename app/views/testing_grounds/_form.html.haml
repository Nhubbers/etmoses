- if testing_ground.errors.any?
  %ul.errors
    - testing_ground.errors.full_messages.uniq.each do |message|
      %li= message

= form_for(testing_ground) do |f|
  - if @testing_ground.scenario_id
    = f.hidden_field :scenario_id

  - if @testing_ground.topology_id
    = f.hidden_field :topology_id
    .hidden
      = text_area_tag :topology_graph, @testing_ground.topology.graph.to_json

  .form-group
    = f.label :name, 'Local energy solution name'
    = f.text_field :name, class: 'form-control'

  %p
    Use the interactive table below to:
    %ul
      %li Connect the technologies from your scaled scenario to the endpoints of your chosen network topology.
      %li Edit the properties of the technologies
      %li Attach profiles to technologies

  #profiles-table
    = render partial: "testing_grounds/profile_table", locals: {testing_ground_profile: @testing_ground.technology_profile.as_json}

  - unless testing_ground.new_record?
    .form-group.pull-right
      = link_to "Export to CSV", technology_profile_testing_ground_path(@testing_ground, format: :csv), class: "btn btn-primary"

  - if testing_ground.new_record?
    .radio-button-group
      = radio_button_tag 'differentiation', "max", true
      = label_tag "Maximum concurrency"
      = radio_button_tag 'differentiation', "min"
      = label_tag "Minimum concurrency"

    %br

  .form-group
    = f.label :technology_profile_csv, "Technology profile CSV"
    = f.file_field :technology_profile_csv, accept: 'text/csv'

  .hidden
    = f.text_area :technology_profile

  .form-group
    = f.submit class: 'btn btn-primary'
    %span.or or
    - if testing_ground.new_record?
      = link_to 'Cancel', testing_grounds_path, class: 'btn btn-default'
    - else
      = link_to 'Cancel', testing_ground_path(testing_ground), class: 'btn btn-default'
