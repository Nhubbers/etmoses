%h1
  - if can_export?(@testing_ground)
    = link_to 'Create national scenario â–º', export_testing_ground_path(@testing_ground), class: 'btn btn-primary pull-right'

  - if policy(@testing_ground).edit?
    = link_to "Edit", edit_testing_ground_path(@testing_ground), style: "margin-right: 10px", class: "btn btn-default pull-right"

  = "Local Energy Solution (LES) ##{ @testing_ground.id }:"
  = @testing_ground.name

%em.note
  - if @testing_ground.private?
    %span.glyphicon.glyphicon-lock

  Created by #{@testing_ground.user.name} on
  %span.date{title: "last updated on #{@testing_ground.updated_at.to_formatted_s(:long)}"}
    = @testing_ground.created_at.to_formatted_s(:long)

  - if @testing_ground.parent_scenario_id
    %span.sep
      = link_to_etm_scenario('National scenario', @testing_ground.parent_scenario_id)

  - if @testing_ground.scenario_id
    %span.sep
      = link_to_etm_scenario('Local scenario', @testing_ground.scenario_id)

  %span.sep
    = link_to topology_path(@testing_ground.topology), target: "_blank" do
      View
      = truncate(@testing_ground.topology.name, length: 25)

#testing-ground
  .strategies.hidden
    = default_strategies.to_json

  .testing-ground-view{ "data-url" => data_testing_ground_url(@testing_ground, format: :json) }
    %span.loading
      %h5
        %span.main Calculating your local energy solution&hellip;
      %span.more
        Large local energy solutions may take up to 30 seconds to display. Please be
        patient, and don't hit refresh!

.clearfix

.node-info
  %h5
  .load-graph.line-chart
    %span.loading-spinner
      = image_tag 'wait.gif'

  = link_to "Download curve", "#", class: "btn btn-primary download-curve"

.clearfix

.load-strategies
  %h2
    = link_to "Flexibility strategies", "#collapse-strategies", data: {toggle: 'collapse'}

  #collapse-strategies.collapse
    - Strategies.all.each do |strategy|
      %div
        = check_box_tag strategy[:name], nil, false, class: "strategy_option", data: { ajax_prop: strategy[:ajax_prop]}, disabled: !strategy[:enabled]
        = label_tag :storage, I18n.t("testing_grounds.strategies.#{strategy[:name]}"), class: ("disabled" unless strategy[:enabled])

    .slider-wrapper.hidden
      %input#solar_pv_capping{type: 'text', data: {'slider-min' => 0, 'slider-max' => 100, 'slider-step' => 1, 'slider-value' => 10}}
      .clearfix
      %p.note Specify which percentage of solar production can be capped

    %button.btn.btn-primary.apply_strategies Apply

#technologies
  %h2
    = link_to "Technologies", "#collapse-technologies", data: {toggle: 'collapse'}

  #collapse-technologies.collapse
    - if @testing_ground.technology_profile.any?
      - @testing_ground.technology_profile.each do |key, techs|
        .row-fluid{ "data-node" => key }
          %table.table
            %thead
              %tr
                %th Name
                %th Profile
                %th Capacity [kW]
                %th Storage volume [kWh]
                %th Yearly demand [kWh]
                %th Units
            %tbody
              - techs.each do |tech|
                %tr{ "data-tech" => tech.name }
                  - InstalledTechnology::EDITABLES.each do |akey|
                    - unless %i(concurrency in_cooperation).include?(akey)
                      %td= tech.send(akey)

    - else
      No Technologies registered yet.

    = link_to 'Download Tech. CSV', technology_profile_testing_ground_url(@testing_ground, format: :csv), class: 'btn btn-primary'

#stakeholders
  %h2
    = link_to "Stakeholders", "#collapse-stakeholders", data: {toggle: 'collapse'}

  #collapse-stakeholders.collapse
    = select_tag("stakeholders", options_for_stakeholders, {include_blank: '-----', class: "form-control"})

